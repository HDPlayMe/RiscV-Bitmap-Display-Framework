# ---------------- MAIN ---------------------------------------------
# Nombre: Alpha_Image.asm
# Funcion: Programa que colorea el fondo de rojo e imprime encima una imagen respetando 
# los colores alfa. Alfa determinado en Negro por defecto, modificable en ALPHA_IMAGE.s
# Requiere:
# - COORD.s
# - ALPHA_IMAGE.s
# Display: 128x128, 0x10040000 (pixel 1x1)
# Ayuda:
# - Impresión de Imágenes: Help(7)
# - Impresión de Colores alfa: Help(13)
# -------------------------------------------------------------------

		.data
image: 	.word 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xff1f1f1f 0xff1f1f1f 0xff1f1f1f 0xff1f1f1f 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xffffffff 0xff1f1f1f 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xffffffff 0xffffffff 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff1f1f1f 0xff1f1f1f 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 0xff000000 

# ---------------- CONSTANTES ---------------------------------------
		.eqv ROJO 0x00ff0000			   # (L) Color de fondo
		.eqv FINAL_SCREEN  0x10050000  # Final de Pantalla
 		.eqv SCREEN 0x10040000		   # Posición de Display

# ---------------- PROGRAMA PRINCIPAL  ------------------------------
		
		.text
	
	#Screen-Fill ROJO
	
	li s0, ROJO 		     # Color Rojo
	li s1, SCREEN		     # Direccion inicial
	li s2, FINAL_SCREEN    # Direccion final
	
bucle:
	beq s1, s2,next		# Si la pantalla esta llena, termina
	sw s0, 0(s1)		# Colorea un pixel
	addi s1,s1,4		#Mueve de pixel
	b bucle			# Vuelve

next: 	

	# ---------------- Imprimir Imagen ---------------------
	la a0, image
	li a1,20
	li a2,20
	li a3, 50
	li a4, 50
	jal IMAGE
	
	# Terminar programa
	li a7, 10
	ecall
	
